// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LevelCompletedLog extends ethereum.Event {
  get params(): LevelCompletedLog__Params {
    return new LevelCompletedLog__Params(this);
  }
}

export class LevelCompletedLog__Params {
  _event: LevelCompletedLog;

  constructor(event: LevelCompletedLog) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get level(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LevelInstanceCreatedLog extends ethereum.Event {
  get params(): LevelInstanceCreatedLog__Params {
    return new LevelInstanceCreatedLog__Params(this);
  }
}

export class LevelInstanceCreatedLog__Params {
  _event: LevelInstanceCreatedLog;

  constructor(event: LevelInstanceCreatedLog) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get instance(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Ethernaut extends ethereum.SmartContract {
  static bind(address: Address): Ethernaut {
    return new Ethernaut("Ethernaut", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateLevelInstanceCall extends ethereum.Call {
  get inputs(): CreateLevelInstanceCall__Inputs {
    return new CreateLevelInstanceCall__Inputs(this);
  }

  get outputs(): CreateLevelInstanceCall__Outputs {
    return new CreateLevelInstanceCall__Outputs(this);
  }
}

export class CreateLevelInstanceCall__Inputs {
  _call: CreateLevelInstanceCall;

  constructor(call: CreateLevelInstanceCall) {
    this._call = call;
  }

  get _level(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateLevelInstanceCall__Outputs {
  _call: CreateLevelInstanceCall;

  constructor(call: CreateLevelInstanceCall) {
    this._call = call;
  }
}

export class RegisterLevelCall extends ethereum.Call {
  get inputs(): RegisterLevelCall__Inputs {
    return new RegisterLevelCall__Inputs(this);
  }

  get outputs(): RegisterLevelCall__Outputs {
    return new RegisterLevelCall__Outputs(this);
  }
}

export class RegisterLevelCall__Inputs {
  _call: RegisterLevelCall;

  constructor(call: RegisterLevelCall) {
    this._call = call;
  }

  get _level(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterLevelCall__Outputs {
  _call: RegisterLevelCall;

  constructor(call: RegisterLevelCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SubmitLevelInstanceCall extends ethereum.Call {
  get inputs(): SubmitLevelInstanceCall__Inputs {
    return new SubmitLevelInstanceCall__Inputs(this);
  }

  get outputs(): SubmitLevelInstanceCall__Outputs {
    return new SubmitLevelInstanceCall__Outputs(this);
  }
}

export class SubmitLevelInstanceCall__Inputs {
  _call: SubmitLevelInstanceCall;

  constructor(call: SubmitLevelInstanceCall) {
    this._call = call;
  }

  get _instance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SubmitLevelInstanceCall__Outputs {
  _call: SubmitLevelInstanceCall;

  constructor(call: SubmitLevelInstanceCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
